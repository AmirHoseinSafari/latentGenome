#pragma once

// @generated by aten/src/ATen/gen.py

#include <ATen/CPUTypeDefault.h>
#include <ATen/Context.h>
#include <ATen/CheckGenerator.h>



#ifdef _MSC_VER
#ifdef Type
#undef Type
#endif
#endif

namespace at {

struct QuantizedCPUQInt8Type final : public CPUTypeDefault {
  explicit QuantizedCPUQInt8Type();
  virtual ScalarType scalarType() const override;
  virtual caffe2::TypeMeta typeMeta() const override;
  virtual Backend backend() const override;
  virtual const char * toString() const override;
  virtual TypeID ID() const override;

  // example
  // virtual Tensor * add(Tensor & a, Tensor & b) override;
  Tensor dequantize(const Tensor & self) const override;
  Scalar q_scale(const Tensor & self) const override;
  Scalar q_zero_point(const Tensor & self) const override;
};

} // namespace at
